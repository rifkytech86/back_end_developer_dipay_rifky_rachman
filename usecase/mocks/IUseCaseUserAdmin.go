// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import api "github.com/dipay/api"
import context "context"
import mock "github.com/stretchr/testify/mock"

// IUseCaseUserAdmin is an autogenerated mock type for the IUseCaseUserAdmin type
type IUseCaseUserAdmin struct {
	mock.Mock
}

// Login provides a mock function with given fields: _a0, _a1
func (_m *IUseCaseUserAdmin) Login(_a0 context.Context, _a1 *api.LoginJSONBody) (string, error) {
	ret := _m.Called(_a0, _a1)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, *api.LoginJSONBody) string); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *api.LoginJSONBody) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Register provides a mock function with given fields: _a0, _a1
func (_m *IUseCaseUserAdmin) Register(_a0 context.Context, _a1 *api.LoginJSONBody) (string, error) {
	ret := _m.Called(_a0, _a1)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, *api.LoginJSONBody) string); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *api.LoginJSONBody) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
